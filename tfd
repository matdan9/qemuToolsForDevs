#!/bin/bash

dir=($pwd)
os=$(uname)
hn=$(hostname)
img="https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-10.8.0-amd64-netinst.iso"
user=($USER)
vm=./vm.img

startVM () {
	if [ "$os" == "Darwin" ]; then
		qemu-system-x86_64 -cdrom debImage.iso -boot menu=on -drive file=vm.img -m 2g -smp 1 -accel hvf -net nic -net user,hostfwd=tcp::2222-:22,hostfwd=tcp::8080-:80 -nographic
		return
	fi
	quemu-system-x86_64 -cdrom debImage.iso -boot menue=on -drive vm.img -m 2g -smp 1 -enable-kvm -cpu host -net nic -net ser.hostfwd=tcp::2222-:22,hostfwd=tcp::8080-:80 -nographic
	return
}

init () {
	if [[ -f "$vm" ]]
	then
		echo "sshfs $USER@10.0.2.2:$HOME/vmShared ./shared -o IdentityFile=$(pwd)/key" > ./mountTool.sh
		setupDiskImg
	fi
}

setupDiskImg () {
	echo "creating a new 10gb image for a vm"
	qemu-img create -f qcow2 vm.img 10g
	echo "downloading new debian image"
	wget $img -O debImage.iso
	echo "starting a graphic vm please proceed to install you os that way and then close the vm"
	qemu-system-x86_64 -cdrom debImage.iso -boot menu=on -drive file=vm.img -m 2G -smp 1
	rm ./debImage.iso
	if [ $os = "Darwin" ]; then
		echo "patching quemu for macos"
		#FIXME setup path and save location for macos pathfile
		codesign -s - --entitlements ""$parent_path"/appE.xml" --force /usr/local/bin/qemu-system-x86_64
	fi
}

linuxInstall () {
	if ! command -v apt-get &> /dev/null
	then
	    echo "tools for devs requires apt-get to run properly please install it or install those dependencies"
		echo "qemu\nssh\nsshfs\n"
	    exit
	fi
	echo "installing software dependencies"
	sudo apt-get update && upgrade -y
	sudo apt-get install ssh sshfs qemu qemu-kvm -y
	echo "the software have been install"
	echo "qemu-kvm might require you to reboot your system"
}

mosInstall () {
	if ! command -v brew &> /dev/null
	then
	    echo "tools for devs requires HomeBrew to run properly please install it"
	    exit
	fi
	echo "installing software dependencies"
	brew update
	brew upgrade
	brew install ssh sshfs macfuse quemu
	echo "the software have been installed"
	echo "some of them might require a os reboot now or later"
	echo "also check for privacy settings in system preferences"
}

if [ "$1" == "start" ]; then
	sudo /usr/sbin/sshd
	[ ! -d "$HOME/vmShared" ] && mkdir $HOME/vmShared
	startVM
	sudo kill -15 $(pgrep sshd)
	exit
fi

if [ "$1" == "init" ]; then
	init
	exit
fi

if [ "$1" == "install" ]; then
	if [ $os == "Darwin" ]; then 
		mosInstall
		exit
	fi
	linuxInstall
	exit
fi

